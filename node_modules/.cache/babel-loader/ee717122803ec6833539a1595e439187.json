{"ast":null,"code":"var _jsxFileName = \"/Users/wenniezhang/Desktop/housing_site/src/InfoSection.tsx\";\nimport React, { Component } from 'react';\nimport ExpandableOption from './ExpandableOption';\nimport './css/info-section.less';\n;\n\nclass InfoSection extends Component {\n  render() {\n    const _this$props = this.props,\n          type = _this$props.type,\n          text = _this$props.text,\n          options = _this$props.options;\n    return React.createElement(\"div\", {\n      className: \"info-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"info-section-type-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, type), React.createElement(\"div\", {\n      className: \"info-section-main-text\",\n      dangerouslySetInnerHTML: {\n        _html: text\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"info-section-options-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, options.map((ele, i) => {\n      return React.createElement(ExpandableOption, Object.assign({\n        key: i\n      }, ele, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nexport default InfoSection;","map":{"version":3,"sources":["/Users/wenniezhang/Desktop/housing_site/src/InfoSection.tsx"],"names":["React","Component","ExpandableOption","InfoSection","render","props","type","text","options","_html","map","ele","i"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,gBAAP,MAAsD,oBAAtD;AACA,OAAO,yBAAP;AAOC;;AAED,MAAMC,WAAN,SAA0BF,SAA1B,CAA2C;AACvCG,EAAAA,MAAM,GAAG;AAAA,wBACyB,KAAKC,KAD9B;AAAA,UACEC,IADF,eACEA,IADF;AAAA,UACQC,IADR,eACQA,IADR;AAAA,UACcC,OADd,eACcA,OADd;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCF,IAAxC,CADJ,EAEI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAwC,MAAA,uBAAuB,EAAE;AAACG,QAAAA,KAAK,EAAEF;AAAR,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,OAAO,CAACE,GAAR,CAAY,CAACC,GAAD,EAAMC,CAAN,KAAY;AAAC,aAAO,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAIA;AAAzB,SAAgCD,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AAA8C,KAAvE,CADL,CAHJ,CADJ;AASH;;AAZsC;;AAe3C,eAAeR,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport ExpandableOption, {ExpandableOptionProps} from './ExpandableOption';\nimport './css/info-section.less';\nimport classNames from 'classnames';\n\ninterface Props {\n    type: string,\n    text: string, \n    options: ExpandableOptionProps[],\n};\n\nclass InfoSection extends Component<Props> {\n    render() {\n        const {type, text, options} = this.props;\n        return (\n            <div className=\"info-section\">\n                <h5 className='info-section-type-text'>{type}</h5>\n                <div className='info-section-main-text' dangerouslySetInnerHTML={{_html: text}}></div>\n                <div className='info-section-options-wrapper'>\n                    {options.map((ele, i) => {return <ExpandableOption key = {i} {...ele}/>})}\n                </div>\n            </div>\n        );\n    };\n}\n\nexport default InfoSection;"]},"metadata":{},"sourceType":"module"}